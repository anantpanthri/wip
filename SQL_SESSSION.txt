ORM-->NOTES
------------


 db.session.query(Person).all()
[<Id:1, Name-->Anant>, <Id:2, Name-->Andy>, <Id:3, Name-->Sandy>, <Id:4, Name-->Divs>]

>>> db.session.query(Person).filter(Person.name=='Andy').all()
[<Id:2, Name-->Andy>]

>>> db.session.query(Person).filter(Person.name=='Andy').first()
<Id:2, Name-->Andy>

you can use relational operators in filter so as to seslct a result
filter is similar to where clause in a SQL
>>> db.session.query(Person).filter(Person.id >2).all()
[<Id:3, Name-->Sandy>, <Id:4, Name-->Divs>]

>>> Person.query.get(1)
<Id:1, Name-->Anant>

>>> db.session.query(Person).filter(Person.name.ilike('Ga%')).all()
[<Id:5, Name-->Garry>]

>>> db.session.query(Person).filter(Person.name.ilike('%a%')).all()
[<Id:1, Name-->Anant>, <Id:2, Name-->Andy>, <Id:3, Name-->Sandy>, <Id:5, Name-->Garry>]

>>> db.session.query(Person).filter(Person.name.ilike('%a%')).limit(2)
<flask_sqlalchemy.BaseQuery object at 0x7fc36735a760>

>>> db.session.query(Person).filter(Person.name.ilike('%a%')).limit(2).all()
[<Id:1, Name-->Anant>, <Id:2, Name-->Andy>]

flask db init
This will generate the migrations scripts
